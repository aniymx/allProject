<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
       	http://www.springframework.org/schema/mvc/spring-mvc.xsd
        ">
	<!-- 扫描web包 -->
	<context:component-scan base-package="com.wp.web"></context:component-scan>
	<!-- 不处理静态资源 -->
	<mvc:default-servlet-handler/>
	<!-- 配置annotation-driven 和修改默认配置器 -->
	<mvc:annotation-driven>
	    <mvc:message-converters register-defaults="true">
	        <bean class="com.wp.core.StringHttpMessageConverter">
	        	<property name="supportedMediaTypes">
	        		<list>  
	                    <value>text/plain;charset=UTF-8</value>  
	                    <value>text/html;charset=UTF-8</value>  
	                    <value>application/json;charset=UTF-8</value>  
	                </list>  
	        	</property>
	        </bean> 
			<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/> 
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	        	<property name="prefixJson" value="false" />
	        	<property name="objectMapper">
	        		 <bean class="com.fasterxml.jackson.databind.ObjectMapper">
	                       <!-- 处理responseBody 里面日期类型 --> 
	                       <property name="dateFormat">  
	                           <bean class="java.text.SimpleDateFormat">  
	                               <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
	                           </bean>  
	                       </property> 
	                       <!-- 为null字段时不显示 -->
	                       <property name="serializationInclusion">
	                           <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
	                       </property> 
	                   </bean>  
	        	</property>
	        	 <property name="supportedMediaTypes">  
	                <list>  
	                    <value>application/json;charset=UTF-8</value>  
	                    <value>application/x-www-form-urlencoded;charset=UTF-8</value>  
	                </list>  
	            </property>
	        </bean>
	    </mvc:message-converters> 
	</mvc:annotation-driven>
	<!-- 验证声明 -->
<!-- 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        不设置则默认为classpath下的 ValidationMessages.properties
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean> -->
    
    <!-- 读取验证的资源文件 ,为要要用资源文件：就是是方便统一管理-->
<!--   	<bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">   
         <property name="basename" value="classpath:validatemessages"/>   
         <property name="fileEncodings" value="utf-8"/>   
         <property name="cacheSeconds" value="120"/>   
     </bean>  -->
	<!-- 试图渲染配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 页面的存放路径 -->
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<!-- 文件的后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- 登陆拦截 -->
		<mvc:interceptor>
			<mvc:mapping path="/sysmgr/admin/**"/>
			<mvc:exclude-mapping path="/sysmgr/admin/login**"/>
			<bean class="com.wp.core.LoginInterceptor" />
		</mvc:interceptor>
		<!-- 权限拦截 -->
		<mvc:interceptor>
			<mvc:mapping path="/sysmgr/admin/**"/>
			<mvc:exclude-mapping path="/sysmgr/admin/index"/>
			<mvc:exclude-mapping path="/sysmgr/admin/log**"/>
			<mvc:exclude-mapping path="/sysmgr/admin/*/template"/>
			<bean class="com.wp.core.PermissionInteception" />
		</mvc:interceptor>
		
	</mvc:interceptors>
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     	<!-- 限制文件上大小，单位是:字节 -->
     	<property name="maxUploadSize" value="5242880000"></property>
     	<!-- 请求编码的格式 -->
     	<property name="defaultEncoding" value="UTF-8"></property>
     	<!-- 上传的临时目录的制定 -->
     	<property name="uploadTempDir" value="upload/temp/"></property>
     </bean>
</beans>